NPM INSTALLED

npm install mongodb
npm install hapi
npm install joi
npm install boom
npm install swagger
npm install joi-phone
npm install wrapper
npm install good : good is a hapi plugin to monitor and report on a variety of hapi server events as well as ops information from the host machine. It listens for events emitted by hapi server instances and pushes standardized events to a collection of streams.
npm install inert : Serve static files
npm install hapi-mongodb
npm install vision : vision decorates the server, request, and reply interfaces with additional methods for managing view engines that can be used to render templated responses. vision also provides a built-in handler implementation for creating templated responses.
npm install hapi-swagger : This is a OpenAPI (aka Swagger) plug-in for HAPI When installed it will self document the API interface in a project.
npm install blipp : blipp is a simple hapi plugin to display the routes table to console at startup. It organizes the display per connection so if you have multiple connections you can easily ensure that you've done your routing table correctly. This can be difficult to see otherwise.
npm install hapi-i18n : The i18n module is attached to the request object configured with the requested locale. This ensures that the correct locale is set for the request when processing multiple requests at the same time.
npm install hapi-locale : Configurable plugin for determine request language in hapi.js applications.
npm install amqplib : A library for making AMQP (Advanced Message Queuing Protocol) 0-9-1 clients for Node.JS, and an AMQP 0-9-1 client for Node.JS v0.8-12, v4.0, and the intervening io.js releases.
Advanced Message Queuing Protocol 
npm install good-console : good-console is a transform stream useful for turning good server events into formatted strings.
npm install inject-then : Promise wrapper for Hapi's server.inject
npm install hapi-cors : Enables cors for a hapijs app based on config.
npm install request-promise : The simplified HTTP request client 'request' with Promise support. Powered by Bluebird.

---------------

WILL BE NEEDED:
npm install angular-google-maps

http://angular-ui.github.io/angular-google-maps/#!/quickstart
http://angular-ui.github.io/angular-google-maps/#!/api/GoogleMapApi
https://developers.google.com/maps/documentation/javascript/tutorial#asynch

API KEY: AIzaSyCapfKd4g5cQpDaL0TB-W68-eAKU0RnBRw

---------------

FILTERS
- save strings has lowercase to the server through Angular JS, example:

var str = "Hello World!";
var res = str.toLowerCase();

- Present in frontend the strings with the first letter in capital letter with Angular JS, for example:

var app = angular.module('app', []);

app.controller('Ctrl', function ($scope) {
   $scope.msg = 'hello, world.';
});

app.filter('capitalize', function() {
    return function(input) {
      return (!!input) ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : '';
    }
});

<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.23/angular.min.js"></script>
<div ng-app="app">
    <div ng-controller="Ctrl">
        <p><b>My Text:</b> {{msg | capitalize}}</p>
    </div>
</div>

---------------

- save photos with the contact ID to a photo folder, for example: assets/photos
example: http://jsfiddle.net/sc1qnw4n/

---------------

Exemplo filter phone at insert:

http://codepen.io/rpdasilva/pen/DpbFf

---------------

Contacts Manager Examples:

https://github.com/pgu/material-contacts-apispark
http://pgu.github.io/material-contacts-apispark/

https://weblogs.asp.net/dwahlin/learning-angularjs-by-example-the-customer-manager-application

http://www.tamas.io/contact-manager-written-in-angularjs-express-and-mongodb-episode-2/

https://github.com/tpiros/contactmanager-2.0

http://codepen.io/Thembani/pen/hqBtr

http://embed.plnkr.co/UrLR8d/